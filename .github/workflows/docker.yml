name: Docker build

on:
  push:
    tags:
      - 'v*'

env:
  IMAGE_NAME: outlinewiki/outline
  BASE_IMAGE_NAME: outlinewiki/outline-base

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      is_prerelease: ${{ steps.check_prerelease.outputs.IS_PRERELEASE }}
    steps:
      - name: Extract version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Check if prerelease
        id: check_prerelease
        run: |
          if [[ "${{ steps.version.outputs.VERSION }}" == *"-"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
          fi

  build-base:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64/v8
          - linux/arm/v7
          - linux/ppc64le
          - linux/s390x
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push base image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.base
          push: true
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.BASE_IMAGE_NAME }},push-by-digest=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: base-digests
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-base-manifests:
    needs: [prepare, build-base]
    runs-on: ubuntu-latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: base-digests
          path: ${{ runner.temp }}/base-digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Create manifest list and push
        run: |
          TAGS="-t ${{ env.BASE_IMAGE_NAME }}:${{ needs.prepare.outputs.version }}"
          if [[ "${{ needs.prepare.outputs.is_prerelease }}" == "false" ]]; then
            TAGS="$TAGS -t ${{ env.BASE_IMAGE_NAME }}:latest"
          fi
          
          docker buildx imagetools create $TAGS \
            $(cd ${{ runner.temp }}/base-digests && printf "${{ env.BASE_IMAGE_NAME }}@sha256:%s " *)

  build-main:
    needs: [prepare, merge-base-manifests]
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64/v8
          - linux/arm/v7
          - linux/ppc64le
          - linux/s390x
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push main image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: main-digests
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge-main-manifests:
    needs: [prepare, build-main]
    runs-on: ubuntu-latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: main-digests
          path: ${{ runner.temp }}/main-digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Create manifest list and push
        run: |
          TAGS="-t ${{ env.IMAGE_NAME }}:${{ needs.prepare.outputs.version }}"
          if [[ "${{ needs.prepare.outputs.is_prerelease }}" == "false" ]]; then
            TAGS="$TAGS -t ${{ env.IMAGE_NAME }}:latest"
          fi
          
          docker buildx imagetools create $TAGS \
            $(cd ${{ runner.temp }}/main-digests && printf "${{ env.IMAGE_NAME }}@sha256:%s " *)
